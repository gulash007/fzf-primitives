from typing import get_args

from ...FzfPrompt.options.actions import BaseAction
from ...FzfPrompt.options.events import Hotkey, Situation

# Used to generate EventAdder using AI
FZF_EVENTS: dict[Situation, str] = {
    "start": "Triggered only once when fzf finder starts. Since fzf consumes the input stream asynchronously, the input list is not available unless you use --sync",
    "load": "Triggered when the input stream is complete and the initial processing of the list is complete",
    "resize": "Triggered when the terminal size is changed",
    "result": "Triggered when the filtering for the current query is complete and the result list is ready",
    "change": "Triggered whenever the query string is changed",
    "focus": "Triggered when the focus changes due to a vertical cursor movement or a search result update",
    "multi": "Triggered when the multi-selection has changed.",
    "one": "Triggered when there's only one match",
    "zero": "Triggered when there's no match",
    "backward-eof": "Triggered when the query string is already empty and you try to delete it backward",
    "jump": "Triggered when successfully jumped to the target item in jump mode",
    "jump-cancel": "Triggered when jump mode is cancelled",
    "click-header": "Triggered when a mouse click occurs within the header. Sets FZF_CLICK_HEADER_LINE and FZF_CLICK_HEADER_COLUMN environment variables starting from 1. It optionally sets FZF_CLICK_HEADER_WORD and FZF_CLICK_HEADER_NTH if clicked on a word.",
}

DEFAULT_KEY_TO_ACTION: dict[Hotkey, BaseAction | None] = {
    "0": None,
    "1": None,
    "2": None,
    "3": None,
    "4": None,
    "5": None,
    "6": None,
    "7": None,
    "8": None,
    "9": None,
    "a": None,
    "b": None,
    "c": None,
    "d": None,
    "e": None,
    "f": None,
    "g": None,
    "h": None,
    "i": None,
    "j": None,
    "k": None,
    "l": None,
    "m": None,
    "n": None,
    "o": None,
    "p": None,
    "q": None,
    "r": None,
    "s": None,
    "t": None,
    "u": None,
    "v": None,
    "w": None,
    "x": None,
    "y": None,
    "z": None,
    "A": None,
    "B": None,
    "C": None,
    "D": None,
    "E": None,
    "F": None,
    "G": None,
    "H": None,
    "I": None,
    "J": None,
    "K": None,
    "L": None,
    "M": None,
    "N": None,
    "O": None,
    "P": None,
    "Q": None,
    "R": None,
    "S": None,
    "T": None,
    "U": None,
    "V": None,
    "W": None,
    "X": None,
    "Y": None,
    "Z": None,
    "f1": None,
    "f2": None,
    "f3": None,
    "f4": None,
    "f5": None,
    "f6": None,
    "f7": None,
    "f8": None,
    "f9": None,
    "f10": None,
    "f11": None,
    "f12": None,
    "enter": "accept",
    "return": "accept",
    "ctrl-m": "accept",
    "space": None,
    "backspace": "backward-delete-char",
    "bspace": "backward-delete-char",
    "bs": "backward-delete-char",
    "tab": "toggle+down",
    "shift-tab": "toggle+up",
    "btab": "toggle+up",
    "esc": "abort",
    "delete": "delete-char",
    "del": "delete-char",
    "up": "up",
    "down": "down",
    "left": "backward-char",
    "right": "forward-char",
    "home": "beginning-of-line",
    "end": "end-of-line",
    "insert": None,
    "page-up": "page-up",
    "page-down": "page-down",
    "pgup": "page-up",
    "pgdn": "page-down",
    "shift-up": "preview-up",
    "shift-down": "preview-down",
    "shift-left": "backward-word",
    "shift-right": "forward-word",
    "shift-delete": None,
    "left-click": None,
    "right-click": "toggle",
    "double-click": "accept",
    "scroll-up": None,
    "scroll-down": None,
    "preview-scroll-up": None,
    "preview-scroll-down": None,
    "shift-left-click": None,
    "shift-right-click": None,
    "shift-scroll-up": None,
    "shift-scroll-down": None,
    "alt-0": None,
    "alt-1": None,
    "alt-2": None,
    "alt-3": None,
    "alt-4": None,
    "alt-5": None,
    "alt-6": None,
    "alt-7": None,
    "alt-8": None,
    "alt-9": None,
    "alt-a": None,
    "alt-b": "backward-word",
    "alt-c": None,
    "alt-d": "kill-word",
    "alt-e": None,
    "alt-f": "forward-word",
    "alt-g": None,
    "alt-h": None,
    "alt-i": None,
    "alt-j": None,
    "alt-k": None,
    "alt-l": None,
    "alt-m": None,
    "alt-n": None,
    "alt-o": None,
    "alt-p": None,
    "alt-q": None,
    "alt-r": None,
    "alt-s": None,
    "alt-t": None,
    "alt-u": None,
    "alt-v": None,
    "alt-w": None,
    "alt-x": None,
    "alt-y": None,
    "alt-z": None,
    "alt-A": None,
    "alt-B": None,
    "alt-C": None,
    "alt-D": None,
    "alt-E": None,
    "alt-F": None,
    "alt-G": None,
    "alt-H": None,
    "alt-I": None,
    "alt-J": None,
    "alt-K": None,
    "alt-L": None,
    "alt-M": None,
    "alt-N": None,
    "alt-O": None,
    "alt-P": None,
    "alt-Q": None,
    "alt-R": None,
    "alt-S": None,
    "alt-T": None,
    "alt-U": None,
    "alt-V": None,
    "alt-W": None,
    "alt-X": None,
    "alt-Y": None,
    "alt-Z": None,
    "alt-/": "toggle-wrap",
    "alt-up": None,
    "alt-down": None,
    "alt-left": None,
    "alt-right": None,
    "alt-shift-up": None,
    "alt-shift-down": None,
    "alt-shift-left": None,
    "alt-shift-right": None,
    "alt-enter": None,
    "alt-space": None,
    "alt-backspace": "backward-kill-word",
    "alt-bspace": "backward-kill-word",
    "alt-bs": "backward-kill-word",
    "ctrl-a": "beginning-of-line",
    "ctrl-b": "backward-char",
    "ctrl-c": "abort",
    "ctrl-d": "delete-char/eof",
    "ctrl-e": "end-of-line",
    "ctrl-f": "forward-char",
    "ctrl-g": "abort",
    "ctrl-h": "backward-delete-char",
    "ctrl-i": "toggle+down",
    "ctrl-j": "down",
    "ctrl-k": "up",
    "ctrl-l": "clear-screen",
    "ctrl-n": "down",
    "ctrl-o": None,
    "ctrl-p": "up",
    "ctrl-q": "abort",
    "ctrl-r": None,
    "ctrl-s": None,
    "ctrl-t": None,
    "ctrl-u": "unix-line-discard",
    "ctrl-v": None,
    "ctrl-w": "unix-word-rubout",
    "ctrl-x": None,
    "ctrl-y": "yank",
    "ctrl-z": None,
    "ctrl-\\": None,
    "ctrl-]": None,
    "ctrl-6": None,
    "ctrl-^": None,
    "ctrl-/": "toggle-wrap",
    "ctrl-_": None,
    "ctrl-alt-a": None,
    "ctrl-alt-b": None,
    "ctrl-alt-c": None,
    "ctrl-alt-d": None,
    "ctrl-alt-e": None,
    "ctrl-alt-f": None,
    "ctrl-alt-g": None,
    "ctrl-alt-h": None,
    "ctrl-alt-i": None,
    "ctrl-alt-j": None,
    "ctrl-alt-k": None,
    "ctrl-alt-l": None,
    "ctrl-alt-m": None,
    "ctrl-alt-n": None,
    "ctrl-alt-o": None,
    "ctrl-alt-p": None,
    "ctrl-alt-q": None,
    "ctrl-alt-r": None,
    "ctrl-alt-s": None,
    "ctrl-alt-t": None,
    "ctrl-alt-u": None,
    "ctrl-alt-v": None,
    "ctrl-alt-w": None,
    "ctrl-alt-x": None,
    "ctrl-alt-y": None,
    "ctrl-alt-z": None,
}

DEFAULT_ACTION_TO_KEYS: dict[BaseAction, tuple[Hotkey, ...]] = {
    "abort": ("ctrl-c", "ctrl-g", "ctrl-q", "esc"),
    "accept": ("enter", "return", "ctrl-m", "double-click"),
    "accept-non-empty": (),
    "accept-or-print-query": (),
    "backward-char": ("ctrl-b", "left"),
    "backward-delete-char": ("ctrl-h", "backspace", "bspace", "bs"),
    "backward-delete-char/eof": (),
    "backward-kill-word": ("alt-backspace", "alt-bspace", "alt-bs"),
    "backward-word": ("alt-b", "shift-left"),
    "beginning-of-line": ("ctrl-a", "home"),
    "bell": (),
    "bg-cancel": (),
    "cancel": (),
    "change-multi": (),
    "clear-screen": ("ctrl-l",),
    "clear-multi": (),
    "clear-selection": (),
    "close": (),
    "clear-query": (),
    "delete-char": ("del", "delete"),
    "delete-char/eof": ("ctrl-d",),
    "deselect": (),
    "deselect-all": (),
    "disable-search": (),
    "down": ("ctrl-j", "ctrl-n", "down"),
    "enable-search": (),
    "end-of-line": ("ctrl-e", "end"),
    "exclude": (),
    "exclude-multi": (),
    "first": (),  # same as pos(1)
    "forward-char": ("ctrl-f", "right"),
    "forward-word": ("alt-f", "shift-right"),
    "ignore": (),
    "jump": (),
    "kill-line": (),
    "kill-word": ("alt-d",),
    "last": (),  # same as pos(-1)
    "next-history": (),  # ctrl-n on --history
    "next-selected": (),
    "page-down": ("pgdn", "page-down"),
    "page-up": ("pgup", "page-up"),
    "half-page-down": (),
    "half-page-up": (),
    "hide-header": (),
    "hide-input": (),
    "hide-preview": (),
    "offset-down": (),  # similar to CTRL-E of Vim
    "offset-up": (),  # similar to CTRL-Y of Vim
    "offset-middle": (),  # place the current item is in the middle of the screen
    "prev-history": (),  # ctrl-p on --history
    "prev-selected": (),
    "preview-down": ("shift-down",),
    "preview-up": ("shift-up",),
    "preview-page-down": (),
    "preview-page-up": (),
    "preview-half-page-down": (),
    "preview-half-page-up": (),
    "preview-bottom": (),
    "preview-top": (),
    "put": (),
    "refresh-preview": (),
    "replace-query": (),
    "select": (),
    "select-all": (),
    "show-header": (),
    "show-input": (),
    "show-preview": (),
    "toggle": ("right-click",),
    "toggle-all": (),
    "toggle-in": (),
    "toggle-out": (),
    "toggle-header": (),
    "toggle-input": (),
    "toggle-multi-line": (),
    "toggle-preview": (),
    "toggle-preview-wrap": (),
    "toggle-search": (),
    "toggle-sort": (),
    "toggle-track": (),
    "toggle-track-current": (),
    "toggle-wrap": ("ctrl-/", "alt-/"),
    "toggle+down": ("ctrl-i", "tab"),
    "toggle+up": ("shift-tab", "btab"),
    "track-current": (),
    "unix-line-discard": ("ctrl-u",),
    "unix-word-rubout": ("ctrl-w",),
    "untrack-current": (),
    "up": ("ctrl-k", "ctrl-p", "up"),
    "yank": ("ctrl-y",),
}

if __name__ == "__main__":
    from pprint import pprint

    pprint(set(DEFAULT_KEY_TO_ACTION).symmetric_difference(set(get_args(Hotkey))))

    for action, keys in DEFAULT_ACTION_TO_KEYS.items():
        for key in keys:
            if DEFAULT_KEY_TO_ACTION.get(key) != action:
                print(f"Mismatch: {action} -> {key} -> {DEFAULT_KEY_TO_ACTION.get(key)}")

    # new = {}
    # for hotkey in get_args(Hotkey):
    #     new.update({hotkey: DEFAULT_FZF_BINDINGS.get(hotkey, None)})

    # import json

    # with open("default_fzf_bindings.json", "w") as f:
    #     json.dump(new, f, indent=4)
