   AVAILABLE EVENTS:
       start
	      Triggered only once when fzf finder starts. Since fzf consumes the input stream asynchronously, the input list is not
	      available unless you use --sync.

	      e.g.
		   # Move cursor to the last item and select all items
		   seq 1000 | fzf --multi --sync --bind start:last+select-all

       load
	      Triggered when the input stream is complete and the initial processing of the list is complete.

	      e.g.
		   # Change the prompt to "loaded" when the input stream is complete
		   (seq 10; sleep 1; seq 11 20) | fzf --prompt 'Loading> ' --bind 'load:change-prompt:Loaded> '

       resize
	      Triggered when the terminal size is changed.

	      e.g.
		   fzf --bind 'resize:transform-header:echo Resized: ${FZF_COLUMNS}x${FZF_LINES}'

       result
	      Triggered when the filtering for the current query is complete and the result list is ready.

	      e.g.
		   # Put the cursor on the second item when the query string is empty
		   # * Note that you can't use 'change' event in this case because the second position may not be available
		   fzf --sync --bind 'result:transform:[[ -z {q} ]] && echo "pos(2)"'
       change
	      Triggered whenever the query string is changed

	      e.g.
		   # Move cursor to the first entry whenever the query is changed
		   fzf --bind change:first
       focus
	      Triggered when the focus changes due to a vertical cursor movement or a search result update.

	      e.g.
		   fzf --bind 'focus:transform-preview-label:echo [ {} ]' --preview 'cat {}'

		   # Any action bound to the event runs synchronously and thus can make the interface sluggish
		   # e.g. lolcat isn't one of the fastest programs, and every cursor movement in
		   #	  fzf will be noticeably affected by its execution time
		   fzf --bind 'focus:transform-preview-label:echo [ {} ] | lolcat -f' --preview 'cat {}'

		   # Beware not to introduce an infinite loop
		   seq 10 | fzf --bind 'focus:up' --cycle
       multi
	      Triggered when the multi-selection has changed.

       one
	      Triggered when there's only one match. one:accept binding is comparable to --select-1 option, but the difference is that
	      --select-1 is only effective before the interactive finder starts but one event is triggered by the interactive finder.

	      e.g.
		   # Automatically select the only match
		   seq 10 | fzf --bind one:accept

       zero
	      Triggered when there's no match. zero:abort binding is comparable to --exit-0 option, but the difference is that --exit-0 is
	      only effective before the interactive finder starts but zero event is triggered by the interactive finder.

	      e.g.
		   # Reload the candidate list when there's no match
		   echo $RANDOM | fzf --bind 'zero:reload(echo $RANDOM)+clear-query' --height 3

       backward-eof
	      Triggered when the query string is already empty and you try to delete it backward.

	      e.g.
		   fzf --bind backward-eof:abort

       jump
	      Triggered when successfully jumped to the target item in jump mode.

	      e.g.
		   fzf --bind space:jump,jump:accept

       jump-cancel
	      Triggered when jump mode is cancelled.

	      e.g.
		   fzf --bind space:jump,jump:accept,jump-cancel:abort

       click-header
	      Triggered when a mouse click occurs within the header. Sets FZF_CLICK_HEADER_LINE and FZF_CLICK_HEADER_COLUMN environment
	      variables starting from 1. It optionally sets FZF_CLICK_HEADER_WORD and FZF_CLICK_HEADER_NTH if clicked on a word.

	      e.g.
		   # Click on the header line to limit search scope
		   ps -ef | fzf --style full --layout reverse --header-lines 1 \
				--header-lines-border bottom --no-list-border \
				--color fg:dim,nth:regular \
				--bind 'click-header:transform-nth(
					  echo $FZF_CLICK_HEADER_NTH
					)+transform-prompt(
					  echo "$FZF_CLICK_HEADER_WORD> "
					)'

